{"version":3,"sources":["components/TextInput.js","components/Login.js","components/SearchHero.js","components/NavBar.js","components/home_list/HeroItem.js","components/home_list/HeroList.js","components/home_list/PowerstatsTotal.js","context/HeroesContext.js","components/home_list/HeroListContainer.js","components/detail/HeroDetail.js","components/detail/HeroDetailContainer.js","components/search/SearchItem.js","components/search/SearchList.js","components/search/SearchListContainer.js","components/Footer.js","App.js","index.js"],"names":["TextInput","label","props","useField","field","meta","htmlFor","id","name","className","touched","error","Login","useState","isLoading","setLoading","Card","Img","variant","src","Body","Title","Text","initialValues","email","password","validationSchema","Yup","required","min","onSubmit","values","setSubmitting","setTimeout","console","log","JSON","stringify","axios","post","headers","then","response","localStorage","setItem","data","token","setLogged","catch","alert","type","placeholder","Button","bg","disabled","SearchHero","history","useHistory","heroName","max","push","NavBar","Navbar","fixed","Container","Row","Col","xs","md","lg","to","Brand","sm","size","onClick","removeItem","window","location","reload","HeroItem","colors","names","powerstats","p","charAt","toUpperCase","slice","color","indexOf","value","alignment","style","width","image","map","item","ProgressBar","now","deleteHero","HeroList","heroes","url","biography","PowerstatsTotal","good","evil","totalHeight","totalWeight","powerTotal","intelligence","strength","speed","durability","power","combat","h","parseInt","appearance","height","weight","length","sort","a","b","context","createContext","useHeroesContext","useContext","heroesFromLS","parse","getItem","goodFromLS","evilFromLS","ContextProvider","children","initialStates","setHeroes","setGood","setEvil","search","setSearch","useEffect","Provider","addHero","heroId","actualHero","find","u","f","filter","HeroListContainer","HeroDetail","alias","workplace","eyeColor","hairColor","HeroDetailContainer","idHero","useParams","hero","aliases","work","base","SearchItem","SearchList","SearchListContainer","httpsAgent","https","Agent","keepAlive","Axios","get","results","Footer","href","target","rel","App","logged","exact","path","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iRAGe,SAASA,EAAT,GAAyC,IAApBC,EAAmB,EAAnBA,MAAUC,EAAS,iBACnD,EAAsBC,YAASD,GAA/B,mBAAOE,EAAP,KAAcC,EAAd,KAEA,OACI,qCACI,uBAAOC,QAASJ,EAAMK,IAAML,EAAMM,KAAlC,SAA0CP,IAC1C,+CAAOQ,UAAU,cAAiBL,GAAWF,IAC5CG,EAAKK,SAAWL,EAAKM,MAClB,qBAAKF,UAAU,QAAf,SAAwBJ,EAAKM,QAC7B,Q,+CCHD,SAASC,EAAMV,GAC1B,IACA,EAAgCW,oBAAS,GAAzC,mBAAOC,EAAP,KAAkBC,EAAlB,KAGA,OACI,qBAAKR,GAAG,QAAR,SACI,eAACS,EAAA,EAAD,CAAMT,GAAG,YAAT,UACI,cAACS,EAAA,EAAKC,IAAN,CAAUV,GAAG,WAAWW,QAAQ,MAAMC,IAAI,sHAC1C,eAACH,EAAA,EAAKI,KAAN,WACI,cAACJ,EAAA,EAAKK,MAAN,CAAYd,GAAG,aAAf,mBACA,cAACS,EAAA,EAAKM,KAAN,CAAWb,UAAU,OAAOF,GAAG,YAA/B,+DAGA,cAAC,IAAD,CACIgB,cAAe,CACXC,MAAO,GACPC,SAAU,IAEdC,iBAAkBC,IAAW,CACzBH,MAAOG,MACFH,MAAM,sBAAMf,UAAU,eAAhB,uCACNmB,SAAS,sBAAMnB,UAAU,eAAhB,wBACdgB,SAAUE,MACLE,IAAI,EAAG,sBAAMpB,UAAU,eAAhB,iEACPmB,SAAS,sBAAMnB,UAAU,eAAhB,0BAElBqB,SAAU,SAACC,EAAD,GAAgC,IAArBC,EAAoB,EAApBA,cACjBC,YAAW,WAzBLlB,GAAW,GA2BbmB,QAAQC,IAAIC,KAAKC,UAAUN,EAAQ,KAAM,IACzCO,IAAMC,KA9BtB,qCA8BgC,CACRf,MAAOO,EAAOP,MACdC,SAAUM,EAAON,UAClB,CACCe,QAAS,CACL,eAAgB,sBAGvBC,MAAK,SAACC,GACHR,QAAQC,IAAIO,GACZC,aAAaC,QAAQ,aAAcF,EAASG,KAAKC,OACjD5C,EAAM6C,WAAU,MAEnBC,OAAM,SAACrC,GACJuB,QAAQC,IAAIxB,GACZsC,MAAM,4CAEdjB,GAAc,KACf,MAnCX,SAsCI,eAAC,IAAD,CAAMzB,GAAG,gBAAT,UACI,qBAAKE,UAAU,oBAAf,SACI,cAACT,EAAD,CACIC,MAAM,UACNO,KAAK,QACL0C,KAAK,OACLC,YAAY,2BAGpB,qBAAK1C,UAAU,oBAAf,SACI,cAACT,EAAD,CACIC,MAAM,kBACNO,KAAK,WACL0C,KAAK,WACLC,YAAY,YAGpB,cAACC,EAAA,EAAD,CACI7C,GAAG,cACHW,QAAQ,UACRmC,GAAG,UACHH,KAAK,SACLI,SAAUxC,EALd,SAOKA,EAAY,gBAAa,0B,WC9E3C,SAASyC,IACpB,IAAIC,EAAUC,cAEd,OACQ,cAAC,IAAD,CACIlC,cAAe,CACXmC,SAAU,IAEdhC,iBAAkBC,IAAW,CACzB+B,SAAU/B,MACTgC,IAAI,GAAI,sBAAMlD,UAAU,aAAhB,+CACRmB,SAAS,sBAAMnB,UAAU,aAAhB,0BAEdqB,SAAU,SAACC,EAAD,GAAgC,IAArBC,EAAoB,EAApBA,cACjBC,YAAW,WACPC,QAAQC,IAAIC,KAAKC,UAAUN,EAAQ,KAAM,IACzCC,GAAc,GACdwB,EAAQI,KAAR,kBAAwB7B,EAAO2B,aAChC,MAdX,SAiBI,eAAC,IAAD,CAAMnD,GAAG,YAAT,UACI,cAACP,EAAD,CACIC,MAAM,GACNO,KAAK,WACL0C,KAAK,OACLC,YAAY,yBAEhB,cAACC,EAAA,EAAD,CAAQlC,QAAQ,OAAOmC,GAAG,OAAOH,KAAK,SAAS3C,GAAG,aAAlD,SACI,sBAAME,UAAU,uBAAhB,2B,gDC/BT,SAASoD,IAMpB,OACI,8BACI,cAACC,EAAA,EAAD,CACIC,MAAM,MACNV,GAAG,OACHnC,QAAQ,OACRX,GAAG,SAJP,SAMI,cAACyD,EAAA,EAAD,UACI,eAACC,EAAA,EAAD,CAAK1D,GAAG,YAAR,UACI,cAAC2D,EAAA,EAAD,CAAKC,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAAG9D,GAAG,WAA9B,SACI,cAAC,IAAD,CAAM+D,GAAG,IAAT,SACI,cAACR,EAAA,EAAOS,MAAR,UACI,sBAAMhE,GAAG,QAAQE,UAAU,uBAA3B,wBAIZ,cAACyD,EAAA,EAAD,CAAKC,GAAI,GAAIK,GAAI,EAAGJ,GAAI,EAAGC,GAAI,EAA/B,SACI,cAACd,EAAD,MAEJ,cAACW,EAAA,EAAD,CAAKC,GAAI,EAAGK,GAAI,EAAGJ,GAAI,EAAGC,GAAI,EAA9B,SACI,cAACjB,EAAA,EAAD,CAAQ7C,GAAG,eAAeW,QAAQ,SAASmC,GAAG,SAASoB,KAAK,KAAKC,QA1B1E,WACX/B,aAAagC,WAAW,cACxBC,OAAOC,SAASC,UAwBI,SACI,sBAAMrE,UAAU,iBAAhB,iC,aC5BjB,SAASsE,EAAS7E,GAC7B,IAAM8E,EAAS,CAAC,OAAQ,UAAW,UAAW,YAAa,UAAW,UAChEC,EAAQ,CAAC,eAAgB,WAAY,QAAS,aAAc,QAAS,UACrEC,EAAa,GACnB,IAAI,IAAMC,KAAKjF,EAAMgF,WACjBA,EAAWtB,KACX,CACIpD,KAAM2E,EAAEC,OAAO,GAAGC,cAAgBF,EAAEG,MAAM,GAC1CC,MAAOP,EAAOC,EAAMO,QAAQL,IAC5BM,MAAOvF,EAAMgF,WAAWC,KAIhC,OACI,eAACnE,EAAA,EAAD,CACIP,UAAS,UAAKP,EAAMwF,WACpBC,MAAO,CAAEC,MAAO,SAFpB,UAII,cAAC5E,EAAA,EAAKC,IAAN,CAAUR,UAAU,WAAWS,QAAQ,MAAMC,IAAKjB,EAAM2F,QACxD,eAAC7E,EAAA,EAAKI,KAAN,WACI,cAACJ,EAAA,EAAKK,MAAN,CAAYZ,UAAU,MAAtB,SAA4B,6BAAKP,EAAMM,SACvC,8BACI,cAACyD,EAAA,EAAD,CAAKxD,UAAU,kBAAf,SACKyE,EAAWY,KAAI,SAAAC,GAAI,OAChB,gCACI,cAAC7B,EAAA,EAAD,CAAKzD,UAAU,OAAO4D,GAAI,GAA1B,SACK0B,EAAKvF,OAEV,cAAC0D,EAAA,EAAD,CAAKzD,UAAU,OAAO4D,GAAI,GAA1B,SACI,cAAC2B,EAAA,EAAD,CAAa9E,QAAS6E,EAAKR,MAAOU,IAAKF,EAAKN,YAL1CM,EAAKvF,KAAKuF,EAAKxF,WAWrC,sBAAKE,UAAU,gBAAf,UACI,cAAC,IAAD,CAAM6D,GAAE,kBAAapE,EAAMK,IAA3B,SACI,cAAC6C,EAAA,EAAD,CAAQlC,QAAQ,OAAOT,UAAU,gBAAjC,0BAIJ,cAAC2C,EAAA,EAAD,CAAQsB,QAAS,kBAAMxE,EAAMgG,WAAWhG,EAAMK,KAAKW,QAAQ,SAAST,UAAU,gBAA9E,SACI,sBAAMA,UAAU,uBAAhB,+BCzCT,SAAS0F,EAAT,GAA2C,IAAvBC,EAAsB,EAAtBA,OAAQF,EAAc,EAAdA,WAEvC,OACI,cAACjC,EAAA,EAAD,UACKmC,EAAON,KAAI,SAACC,GAAD,OACJ,cAAC7B,EAAA,EAAD,CAAmBG,GAAI,EAAGD,GAAI,EAAGI,GAAI,EAAG/D,UAAU,qBAAlD,SACI,cAAEsE,EAAF,CACIxE,GAAIwF,EAAKxF,GACTC,KAAMuF,EAAKvF,KACXqF,MAAOE,EAAKF,MAAMQ,IAClBH,WAAYA,EACZhB,WAAYa,EAAKb,WACjBQ,UAAWK,EAAKO,UAAUZ,aAPxBK,EAAKxF,S,YCPpB,SAASgG,EAAT,GAAkD,IAAD,EAAtBH,EAAsB,EAAtBA,OAAQI,EAAc,EAAdA,KAAMC,EAAQ,EAARA,KAG9CzB,EAAS,CAAC,OAAQ,UAAW,UAAW,YAAa,UAAW,UAChEC,EAAQ,CAAC,eAAgB,WAAY,QAAS,aAAc,QAAS,UACvEyB,EAAc,EACdC,EAAc,EACZC,EAAa,CACfC,aAAc,EACdC,SAAU,EACVC,MAAO,EACPC,WAAY,EACZC,MAAO,EACPC,OAAO,GAbiD,cAe7Cd,GAf6C,IAe5D,IAAI,EAAJ,qBAAsB,CAAC,IAAbe,EAAY,QAClBP,EAAWC,aAAeO,SAASR,EAAWC,cAAgBO,SAASD,EAAEjC,WAAW2B,cACpFD,EAAWE,SAAWM,SAASR,EAAWE,UAAYM,SAASD,EAAEjC,WAAW4B,UAC5EF,EAAWG,MAAQK,SAASR,EAAWG,OAASK,SAASD,EAAEjC,WAAW6B,OACtEH,EAAWI,WAAaI,SAASR,EAAWI,YAAcI,SAASD,EAAEjC,WAAW8B,YAChFJ,EAAWK,MAAQG,SAASR,EAAWK,OAASG,SAASD,EAAEjC,WAAW+B,OACtEL,EAAWM,OAASE,SAASR,EAAWM,QAAUE,SAASD,EAAEjC,WAAWgC,QACxER,GAAeU,SAAUD,EAAEE,WAAWC,OAAO,GAAIhC,MAAM,GAAG,IAC1DqB,GAAeS,SAAUD,EAAEE,WAAWE,OAAO,GAAIjC,MAAM,GAAG,KAvBF,8BAyB5DpD,QAAQC,IAAIyE,GACZ,IAAM1B,EAAa,GACnB,IAAI,IAAMC,KAAKyB,EACX1E,QAAQC,IAAIgD,GACZD,EAAWtB,KACX,CACIpD,KAAM2E,EAAEC,OAAO,GAAGC,cAAgBF,EAAEG,MAAM,GAC1CC,MAAOP,EAAOC,EAAMO,QAAQL,IAC5BM,MAAO2B,SAAUR,EAAWzB,GAAKiB,EAAOoB,UAehD,OAZAtC,EAAWuC,MAAK,SAAUC,EAAGC,GACzB,OAAID,EAAEjC,MAAQkC,EAAElC,OACJ,EAERiC,EAAEjC,MAAQkC,EAAElC,MACL,EAGJ,KAEXvD,QAAQC,IAAI+C,GAGR,cAAClE,EAAA,EAAD,CAAMP,UAAU,WAAWF,GAAG,kBAA9B,SACI,cAACyD,EAAA,EAAD,UACI,eAACC,EAAA,EAAD,WACI,cAACC,EAAA,EAAD,CAAKC,GAAI,GAAT,SACI,mBAAG5D,GAAG,kBAAN,mDAEJ,cAAC2D,EAAA,EAAD,CAAKzD,UAAU,MAAM4D,GAAI,EAAGD,GAAI,EAAGI,GAAI,EAAvC,SACI,cAACP,EAAA,EAAD,UACKiB,EAAWY,KAAI,SAAAC,GAAI,OAChB,gCACI,cAAC7B,EAAA,EAAD,CAAKzD,UAAU,OAAO4D,GAAI,GAA1B,SACK0B,EAAKvF,OAEV,cAAC0D,EAAA,EAAD,CAAKzD,UAAU,OAAO4D,GAAI,GAA1B,SACI,cAAC2B,EAAA,EAAD,CAAa9E,QAAS6E,EAAKR,MAAOU,IAAKF,EAAKN,YALpD,UAAaM,EAAKxF,IAAlB,OAAuBwF,EAAKvF,cAWxC,cAAC0D,EAAA,EAAD,CAAKzD,UAAU,OAAO4D,GAAI,EAAGD,GAAI,EAAGI,GAAI,EAAxC,SACI,eAACP,EAAA,EAAD,WACI,eAACC,EAAA,EAAD,CAAKzD,UAAU,kBAAkB4D,GAAI,GAArC,8BACqB,uBAAM5D,UAAU,OAAhB,UAAwB2G,SAASV,EAAYN,EAAOoB,QAApD,YAErB,eAACtD,EAAA,EAAD,CAAKzD,UAAU,kBAAkB4D,GAAI,GAArC,4BACmB,uBAAM5D,UAAU,OAAhB,UAAwB2G,SAAST,EAAYP,EAAOoB,QAApD,YAEjBpB,EAAOoB,OAAO,EACZ,eAACtD,EAAA,EAAD,CAAKzD,UAAU,OAAO4D,GAAI,GAAI9D,GAAG,aAAjC,4CAC0B,EAAE6F,EAAOoB,OADnC,iBACwE,IAAlBpB,EAAOoB,QAAgB,qCAD7E,cAIA,cAACtD,EAAA,EAAD,CAAKzD,UAAU,OAAO4D,GAAI,GAAI9D,GAAG,aAAjC,oDAIJ,cAAC2D,EAAA,EAAD,CAAK3D,GAAG,eAAe8D,GAAI,GAA3B,kCAGA,eAACH,EAAA,EAAD,CAAKzD,UAAU,kCAAkC0D,GAAI,EAArD,qBACaqC,EADb,QAGA,eAACtC,EAAA,EAAD,CAAKzD,UAAU,iCAAiC0D,GAAI,EAApD,oBACYsC,EADZ,oB,YC9FfmB,EAAUC,wBAAc,IACxBC,EAAmB,kBAAMC,qBAAWH,IAE3CI,EAAe5F,KAAK6F,MAAMtF,aAAauF,QAAQ,WAC/CC,EAAa/F,KAAK6F,MAAMtF,aAAauF,QAAQ,SAC7CE,EAAahG,KAAK6F,MAAMtF,aAAauF,QAAQ,SAgEpCG,EA9DS,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACjBC,EAAgB,CACD,OAAjBP,EAAwBA,EAAe,GACvCG,EAAmB,KAAQA,EAAa,EACxCC,EAAmB,KAAQA,EAAa,GAE5C,EAA4BvH,mBAAS0H,EAAc,IAAnD,mBAAOnC,EAAP,KAAeoC,EAAf,KACA,EAAwB3H,mBAAS0H,EAAc,IAA/C,mBAAO/B,EAAP,KAAaiC,EAAb,KACA,EAAuB5H,mBAAS0H,EAAc,IAA9C,mBAAO9B,EAAP,KAAaiC,EAAb,KACA,EAA4B7H,mBAAS,IAArC,mBAAO8H,EAAP,KAAeC,EAAf,KAEAC,qBAAU,WACNlG,aAAaC,QAAQ,SAAUR,KAAKC,UAAU+D,IAC9CzD,aAAaC,QAAQ,OAAQR,KAAKC,UAAUmE,IAC5C7D,aAAaC,QAAQ,OAAQR,KAAKC,UAAUoE,MAC7C,CAACL,EAAQI,EAAMC,IAwClB,OACI,cAACmB,EAAQkB,SAAT,CAAkBrD,MAAO,CAAEW,SAAQoC,YAAWO,QAvClC,SAACC,GACb,GAAG5C,EAAOoB,OAAS,EAAG,CAClB,IAAMyB,EAAaN,EAAOO,MAAK,SAAAC,GAAC,OAAIA,EAAE5I,KAAOyI,KAC7C9G,QAAQC,IAAI8G,GAE2B,QAApCA,EAAW3C,UAAUZ,UACV,IAAPc,EACCvD,MAAM,6CACAuD,EAAK,IACXgC,EAAU,GAAD,mBAAKpC,GAAL,CAAa6C,KACtBR,EAAQjC,EAAK,IAEwB,QAAnCyC,EAAW3C,UAAUZ,YACjB,IAAPe,EACCxD,MAAM,4CACAwD,EAAK,IACX+B,EAAU,GAAD,mBAAKpC,GAAL,CAAa6C,KACtBP,EAAQjC,EAAK,UAIrBxD,MAAM,sFAkB6CiD,WAdxC,SAAC8C,GAChB,GAAG5C,EAAOoB,OAAS,EAAG,CAClB,IAAMyB,EAAa7C,EAAO8C,MAAK,SAAAE,GAAC,OAAIA,EAAE7I,KAAOyI,KAC7C9G,QAAQC,IAAI8G,EAAW3C,UAAUZ,WACM,QAApCuD,EAAW3C,UAAUZ,UACpB+C,EAAQjC,EAAK,GAEbkC,EAAQjC,EAAK,GAEjB+B,EAAUpC,EAAOiD,QAAO,SAAAtD,GAAI,OAAIA,IAASkD,QAKsBN,SAAQC,YAAWpC,OAAMC,QAA5F,SACM6B,KC1DC,SAASgB,IACpB,MAA2CxB,IAAnC1B,EAAR,EAAQA,OAAQF,EAAhB,EAAgBA,WAAYM,EAA5B,EAA4BA,KAAMC,EAAlC,EAAkCA,KAGlC,OAFAvE,QAAQC,IAAR,iBAAsBqE,EAAtB,oBAAsCC,IAGlC,eAACzC,EAAA,EAAD,CAAWzD,GAAG,oBAAd,UACI,2CAAkB,mBAAGA,GAAG,WAAN,6DACjB6F,EAAOoB,OAAO,EACX,qCACI,cAACjB,EAAD,CACAC,KAAMA,EACNC,KAAMA,EACNL,OAAQA,IAER,cAAED,EAAF,CACAC,OAAQA,EACRF,WAAYA,OAIhB,oBAAG3F,GAAG,YAAN,4HAEI,uBAFJ,kDCvBD,SAASgJ,EAAWrJ,GAE/B,OACI,cAACc,EAAA,EAAD,CAAM2E,MAAO,CAAEC,MAAO,SAAWrF,GAAG,SAApC,SACI,eAAC0D,EAAA,EAAD,WACI,eAACC,EAAA,EAAD,CAAKG,GAAI,EAAGD,GAAI,EAAGI,GAAI,EAAvB,UACI,cAACxD,EAAA,EAAKK,MAAN,CAAYZ,UAAU,UAAtB,SAAgC,6BAAKP,EAAMM,SAC3C,cAACQ,EAAA,EAAKI,KAAN,UACI,eAACJ,EAAA,EAAKM,KAAN,CAAWf,GAAG,aAAd,UACI,uBAAME,UAAU,gBAAhB,oBAAuC,sBAAMA,UAAU,OAAhB,SAAwBP,EAAMsJ,WACrE,uBAAM/I,UAAU,gBAAhB,+BAAkD,sBAAMA,UAAU,OAAhB,SAAwBP,EAAMuJ,eAChF,uBAAMhJ,UAAU,gBAAhB,qBAAwC,sBAAMA,UAAU,OAAhB,SAAwBP,EAAMoH,YACtE,uBAAM7G,UAAU,gBAAhB,mBAAsC,sBAAMA,UAAU,OAAhB,SAAwBP,EAAMqH,YACpE,uBAAM9G,UAAU,gBAAhB,4BAA+C,sBAAMA,UAAU,OAAhB,SAAwBP,EAAMwJ,cAC7E,uBAAMjJ,UAAU,gBAAhB,6BAAgD,sBAAMA,UAAU,OAAhB,SAAwBP,EAAMyJ,uBAI1F,cAACzF,EAAA,EAAD,CAAKG,GAAI,EAAGD,GAAI,EAAGI,GAAI,EAAvB,SACI,cAACxD,EAAA,EAAKC,IAAN,CAAUV,GAAG,gBAAgBW,QAAQ,MAAMC,IAAKjB,EAAM2F,eCf3D,SAAS+D,IACpB,IAAQxD,EAAW0B,IAAX1B,OACFyD,EAASC,cACTC,EAAO3D,EAAO8C,MAAK,SAAA/B,GAAC,OAAIA,EAAE5G,KAAOsJ,EAAOA,UAG9C,OAFA3H,QAAQC,IAAI0H,EAAOA,QACnB3H,QAAQC,IAAI4H,GAER,qCACA,cAAC/F,EAAA,EAAD,CAAWvD,UAAU,OAAOF,GAAG,kBAA/B,SACI,cAAEgJ,EAAF,CACI/I,KAAMuJ,EAAKvJ,KACXqF,MAAOkE,EAAKlE,MAAMQ,IAClBmD,MAAOO,EAAKzD,UAAU0D,QAAQ,GAC9B1C,OAAQyC,EAAK1C,WAAWC,OAAO,GAC/BC,OAAQwC,EAAK1C,WAAWE,OAAO,GAC/BmC,SAAUK,EAAK1C,WAAW,aAC1BsC,UAAWI,EAAK1C,WAAW,cAC3BoC,UAAWM,EAAKE,KAAKC,SAG7B,qBAAK3J,GAAG,aAAR,SACI,cAAC6C,EAAA,EAAD,CACIlC,QAAQ,UACRmC,GAAG,UAFP,iC,8BC1BG,SAAS8G,EAAWjK,GAC/B,IAAIsD,EAAUC,cADwB,4CAEtC,sBAAAiE,EAAA,sEACUxH,EAAM6I,QAAQ7I,EAAMK,IAD9B,OAEIiD,EAAQI,KAAK,KAFjB,4CAFsC,sBAMtC,OACI,eAAC5C,EAAA,EAAD,CAAMP,UAAS,sBAAiBP,EAAMwF,WAAaC,MAAO,CAAEC,MAAO,SAAnE,UACI,cAAC5E,EAAA,EAAKC,IAAN,CAAUR,UAAU,WAAWS,QAAQ,MAAMC,IAAKjB,EAAM2F,QACxD,eAAC7E,EAAA,EAAKI,KAAN,CAAWX,UAAU,aAArB,UACI,cAACO,EAAA,EAAKK,MAAN,CAAYZ,UAAU,MAAtB,SAA4B,6BAAKP,EAAMM,SACvC,qBAAKC,UAAU,wBAAf,SACI,cAAC2C,EAAA,EAAD,CAAQsB,QAZc,2CAYQxD,QAAQ,UAAtC,SACI,sBAAMT,UAAU,uBAAhB,2BCXT,SAAS2J,EAAT,GAA0C,IAApBzB,EAAmB,EAAnBA,OAAQI,EAAW,EAAXA,QACzC,OACI,cAAC9E,EAAA,EAAD,UACK0E,EAAO7C,KAAI,SAACC,GAAD,OACJ,cAAC7B,EAAA,EAAD,CAEIG,GAAI,EACJD,GAAI,EACJI,GAAI,GACJL,GAAI,GACJ1D,UAAU,qBANd,SAQI,cAAE0J,EAAF,CACI5J,GAAIwF,EAAKxF,GACTwI,QAASA,EACTvI,KAAMuF,EAAKvF,KACXqF,MAAOE,EAAKF,MAAMQ,IAClBX,UAAWK,EAAKO,UAAUZ,aAZzBK,EAAKxF,GAAG,Q,sBCDtB,SAAS8J,IACpB,MAAuCvC,IAA/BiB,EAAR,EAAQA,QAASJ,EAAjB,EAAiBA,OAAQC,EAAzB,EAAyBA,UAClBpI,EAAQsJ,cAARtJ,KACHgD,EAAUC,cAmBd,OAjBAoF,qBAAU,WACN,IAAMyB,EAAa,IAAIC,IAAMC,MAAM,CAAEC,WAAW,IAChDC,IAAMC,IAAN,wEAA2EnK,GAAQ,CAAE8J,eAChF7H,MAAK,SAACC,GACyB,YAAzBA,EAASG,KAAKH,SACbkG,EAAUlG,EAASG,KAAK+H,SAExBhC,EAAUlG,EAASG,KAAKH,UAE5BR,QAAQC,IAAIO,EAASG,SAExBG,OAAM,SAACrC,GACJuB,QAAQC,IAAIxB,GACZ6C,EAAQI,KAAK,UAEtB,CAACpD,EAAMgD,EAASoF,IAGf,sBAAKrI,GAAG,oBAAR,UACI,oBAAIA,GAAG,uBAAP,qCAEe,UAAXoI,EACA,cAAEyB,EAAF,CACAzB,OAAQA,EACRI,QAASA,IAGT,mBAAGxI,GAAG,WAAN,4ECxCD,SAASsK,IACpB,OACI,mBAAGtK,GAAG,SAASE,UAAU,MAAzB,SACI,mBACIqK,KAAK,qDACLC,OAAO,SACPC,IAAI,sBAHR,uD,cCyCGC,MAlCf,WACE,MAA4BpK,oBAAS,GAArC,mBAAOqK,EAAP,KAAenI,EAAf,KACAb,QAAQC,IAAI+I,GACZ,IAAMpI,EAAQH,aAAauF,QAAQ,cAQnC,OANAW,qBAAU,WACK,OAAV/F,GACDC,GAAU,KAEX,CAACD,IAGF,cAAC,EAAD,UACE,cAAC,IAAD,UACGoI,EAKD,qCACE,cAACrH,EAAD,IACA,eAAC,IAAD,WACE,cAAC,IAAD,CAAOsH,OAAK,EAACC,KAAK,IAAIC,UAAY/B,IAClC,cAAC,IAAD,CAAO6B,OAAK,EAACC,KAAK,kBAAkBC,UAAYzB,IAChD,cAAC,IAAD,CAAOuB,OAAK,EAACC,KAAK,gBAAgBC,UAAYhB,OAEhD,cAACQ,EAAD,OAXF,cAACjK,EAAD,CACEmC,UAAWA,SCvBrBuI,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.fb8fce70.chunk.js","sourcesContent":["import React from 'react'\r\nimport { useField } from 'formik'\r\n\r\nexport default function TextInput({ label, ...props }) {\r\n    const [field, meta] = useField(props);\r\n\r\n    return (\r\n        <>\r\n            <label htmlFor={props.id || props.name} >{label}</label>\r\n            <input className=\"text-input\" {...field} {...props} />\r\n            {meta.touched && meta.error ? (\r\n                <div className=\"error\">{meta.error}</div>\r\n            ) : null}\r\n        </>\r\n    );\r\n}\r\n","import React, { useState } from 'react'\r\nimport TextInput from './TextInput'\r\nimport { Card, Button } from 'react-bootstrap'\r\nimport { Formik, Form } from 'formik'\r\nimport * as Yup from 'yup';\r\nimport axios from 'axios';\r\n\r\n// Formulario de autenticación. Validado con la librería Formik\r\n// Authentication form. Validation using Formik(library).\r\nexport default function Login(props) {\r\n    const URL = \"http://challenge-react.alkemy.org/\";\r\n    const [isLoading, setLoading] = useState(false);\r\n    const handleClickLoad = () => setLoading(true);\r\n\r\n    return (\r\n        <div id=\"login\">\r\n            <Card id=\"loginCard\">\r\n                <Card.Img id=\"loginImg\" variant=\"top\" src=\"https://p4.wallpaperbetter.com/wallpaper/36/277/215/marvel-comics-dc-comics-batman-iron-man-wallpaper-preview.jpg\" />\r\n                <Card.Body>\r\n                    <Card.Title id=\"loginTitle\">Login</Card.Title>\r\n                    <Card.Text className=\"my-2\" id=\"loginText\">\r\n                    Ingresá para crear tu equipo de superhéroes\r\n                    </Card.Text>\r\n                    <Formik\r\n                        initialValues={{\r\n                            email: '',\r\n                            password: '',\r\n                        }}\r\n                        validationSchema={Yup.object({\r\n                            email: Yup.string()\r\n                                .email(<span className=\"validations \">Dirección inválida</span>)\r\n                                .required(<span className=\"validations \">Requerido</span>),\r\n                            password: Yup.string()\r\n                                .min(4, <span className=\"validations \">La contraseña debe tener más de 4 caracteres</span>)\r\n                                .required(<span className=\"validations \">Requerido</span>)\r\n                        })}\r\n                        onSubmit={(values, { setSubmitting }) => {\r\n                            setTimeout(() => {\r\n                                handleClickLoad();\r\n                                console.log(JSON.stringify(values, null, 2));\r\n                                axios.post(URL, {\r\n                                        email: values.email,\r\n                                        password: values.password\r\n                                    }, {\r\n                                        headers: {\r\n                                            \"Content-Type\": \"application/json\",\r\n                                        },\r\n                                    })\r\n                                    .then((response) => {\r\n                                        console.log(response);\r\n                                        localStorage.setItem('hero_token', response.data.token);\r\n                                        props.setLogged(true);\r\n                                    })\r\n                                    .catch((error) => {\r\n                                        console.log(error);\r\n                                        alert(\"Los datos ingresados son incorrectos.\")\r\n                                    });\r\n                                setSubmitting(false);\r\n                            }, 400);\r\n                        }}\r\n                    >\r\n                        <Form id=\"formContainer\">\r\n                            <div className=\"my-2 inputs_login\">\r\n                                <TextInput \r\n                                    label=\"Email: \"\r\n                                    name=\"email\"\r\n                                    type=\"text\"\r\n                                    placeholder=\"challenge@alkemy.org\"\r\n                                />\r\n                            </div>\r\n                            <div className=\"my-2 inputs_login\">\r\n                                <TextInput \r\n                                    label=\"Contraseña: \"\r\n                                    name=\"password\"\r\n                                    type=\"password\"\r\n                                    placeholder=\"react\"\r\n                                />\r\n                            </div>\r\n                            <Button \r\n                                id=\"loginSubmit\" \r\n                                variant=\"primary\" \r\n                                bg=\"primary\" \r\n                                type=\"submit\"\r\n                                disabled={isLoading}\r\n                            >\r\n                                {isLoading ? 'Loading…' : 'Ingresar'}\r\n                            </Button>\r\n                        </Form>\r\n                    </Formik>\r\n                </Card.Body>\r\n            </Card>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport TextInput from './TextInput'\r\nimport { Button } from 'react-bootstrap'\r\nimport { Formik, Form } from 'formik'\r\nimport * as Yup from 'yup';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nexport default function SearchHero() {\r\n    let history = useHistory();\r\n\r\n    return (\r\n            <Formik\r\n                initialValues={{\r\n                    heroName: '',\r\n                }}\r\n                validationSchema={Yup.object({\r\n                    heroName: Yup.string()\r\n                    .max(15, <span className=\"form_alert\">Debe tener 15 caracteres o menos</span>)\r\n                    .required(<span className=\"form_alert\">Requerido</span>)\r\n                })}\r\n                onSubmit={(values, { setSubmitting }) => {\r\n                    setTimeout(() => {\r\n                        console.log(JSON.stringify(values, null, 2));\r\n                        setSubmitting(false);\r\n                        history.push(`/search/${values.heroName}`)\r\n                    }, 400);\r\n                }}\r\n            >\r\n                <Form id=\"searchBox\">\r\n                    <TextInput \r\n                        label=\"\"\r\n                        name=\"heroName\"\r\n                        type=\"text\"\r\n                        placeholder=\"Buscá tu héroe\"\r\n                    />\r\n                    <Button variant=\"info\" bg=\"info\" type=\"submit\" id=\"searchIcon\">\r\n                        <span className=\"material-icons xs-18\">search</span>\r\n                    </Button>\r\n                </Form>\r\n            </Formik>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport SearchHero from './SearchHero';\r\nimport { Row, Col, Container, Navbar, Button } from 'react-bootstrap'\r\nimport { Link } from 'react-router-dom'\r\n\r\nexport default function NavBar() {\r\n    const logOut = () => {\r\n        localStorage.removeItem('hero_token');\r\n        window.location.reload();\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Navbar \r\n                fixed=\"top\" \r\n                bg=\"dark\" \r\n                variant=\"dark\"\r\n                id=\"navBar\"\r\n            >\r\n                <Container>\r\n                    <Row id=\"rowNavbar\">\r\n                        <Col xs={12} md={3} lg={3} id=\"homeIcon\">\r\n                            <Link to='/'>\r\n                                <Navbar.Brand>\r\n                                    <span id=\"brand\" className=\"material-icons xs-36\">home</span>\r\n                                </Navbar.Brand>\r\n                            </Link>\r\n                        </Col>\r\n                        <Col xs={10} sm={7} md={7} lg={7}>\r\n                            <SearchHero />\r\n                        </Col>\r\n                        <Col xs={2} sm={2} md={2} lg={2}>\r\n                            <Button id=\"logoutButton\" variant=\"danger\" bg=\"danger\" size=\"sm\" onClick={logOut}>\r\n                                <span className=\"material-icons\">logout</span>\r\n                            </Button>\r\n                        </Col>\r\n                    </Row>\r\n                </Container>\r\n            </Navbar>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { Card, Button, ProgressBar, Row, Col } from 'react-bootstrap'\r\nimport { Link } from 'react-router-dom';\r\n\r\n// Componente individual para los superhéroes del equipo en el Home.\r\nexport default function HeroItem(props) {\r\n    const colors = [\"info\", \"success\", \"warning\", \"secondary\", \"primary\", \"danger\"]\r\n    const names = [\"intelligence\", \"strength\", \"speed\", \"durability\", \"power\", \"combat\"]\r\n    const powerstats = [];\r\n    for(const p in props.powerstats){\r\n        powerstats.push(\r\n        {\r\n            name: p.charAt(0).toUpperCase() + p.slice(1),\r\n            color: colors[names.indexOf(p)],\r\n            value: props.powerstats[p]\r\n        })\r\n    }\r\n\r\n    return (\r\n        <Card \r\n            className={`${props.alignment}`} \r\n            style={{ width: '20rem' }}\r\n        >\r\n            <Card.Img className=\"img_hero\" variant=\"top\" src={props.image} />\r\n            <Card.Body>\r\n                <Card.Title className=\"m-0\"><h3>{props.name}</h3></Card.Title>\r\n                <div>\r\n                    <Row className=\"powerstats_item\">\r\n                        {powerstats.map(item => (\r\n                            <div key={item.name+item.id}>\r\n                                <Col className=\"my-1\" lg={11}>\r\n                                    {item.name}\r\n                                </Col>\r\n                                <Col className=\"my-1\" lg={11}>\r\n                                    <ProgressBar variant={item.color} now={item.value} />\r\n                                </Col>\r\n                            </div>\r\n                        ))}\r\n                    </Row>\r\n                </div>\r\n                <div className=\"containerHero\">\r\n                    <Link to={`/detail/${props.id}`}>\r\n                        <Button variant=\"info\" className=\"detail_button\">\r\n                            Ver más\r\n                        </Button>\r\n                    </Link>\r\n                    <Button onClick={() => props.deleteHero(props.id)} variant=\"danger\" className=\"delete_button\">\r\n                        <span className=\"material-icons xs-18\">delete</span>\r\n                    </Button>\r\n                </div>\r\n            </Card.Body>\r\n        </Card>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { Col, Row } from 'react-bootstrap';\r\nimport HeroItem from './HeroItem';\r\n\r\n//Lista de los superhéroes del equipo. \r\n//Aquí obtenemos la información recibida de la API via props y la mapeamos con el componente \"HeroItem\".\r\nexport default function HeroList({ heroes, deleteHero }) {\r\n    \r\n    return (\r\n        <Row>\r\n            {heroes.map((item) => (\r\n                    <Col key={item.id} lg={4} md={4} sm={6} className=\"containerCard my-3\">\r\n                        < HeroItem\r\n                            id={item.id}\r\n                            name={item.name}\r\n                            image={item.image.url}\r\n                            deleteHero={deleteHero}\r\n                            powerstats={item.powerstats}\r\n                            alignment={item.biography.alignment}\r\n                        />\r\n                    </Col>\r\n                ))\r\n            }\r\n        </Row>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Card, Col, Row, ProgressBar, Container } from 'react-bootstrap'\r\n\r\n//Este componente mostrará las powerstats totales del equipo asi como tambien la altura y peso promedio.\r\nexport default function PowerstatsTotal({ heroes, good, evil }) {\r\n\r\n    //Lógica para powerstats, altura y peso promedio del equipo.\r\n    const colors = [\"info\", \"success\", \"warning\", \"secondary\", \"primary\", \"danger\"]\r\n    const names = [\"intelligence\", \"strength\", \"speed\", \"durability\", \"power\", \"combat\"]\r\n    let totalHeight = 0;\r\n    let totalWeight = 0;\r\n    const powerTotal = {\r\n        intelligence: 0,\r\n        strength: 0,\r\n        speed: 0,\r\n        durability: 0,\r\n        power: 0,\r\n        combat:0\r\n    }\r\n    for(const h of heroes){\r\n        powerTotal.intelligence = parseInt(powerTotal.intelligence) + parseInt(h.powerstats.intelligence);\r\n        powerTotal.strength = parseInt(powerTotal.strength) + parseInt(h.powerstats.strength);\r\n        powerTotal.speed = parseInt(powerTotal.speed) + parseInt(h.powerstats.speed);\r\n        powerTotal.durability = parseInt(powerTotal.durability) + parseInt(h.powerstats.durability);\r\n        powerTotal.power = parseInt(powerTotal.power) + parseInt(h.powerstats.power);\r\n        powerTotal.combat = parseInt(powerTotal.combat) + parseInt(h.powerstats.combat);\r\n        totalHeight += parseInt((h.appearance.height[1]).slice(0,-3));\r\n        totalWeight += parseInt((h.appearance.weight[1]).slice(0,-3));\r\n    }\r\n    console.log(powerTotal)\r\n    const powerstats = [];\r\n    for(const p in powerTotal){\r\n        console.log(p)\r\n        powerstats.push(\r\n        {\r\n            name: p.charAt(0).toUpperCase() + p.slice(1),\r\n            color: colors[names.indexOf(p)],\r\n            value: parseInt((powerTotal[p])/(heroes.length))\r\n        })\r\n    }\r\n    powerstats.sort(function (a, b) {\r\n        if (a.value > b.value) {\r\n            return -1;\r\n        }\r\n        if (a.value < b.value) {\r\n            return 1;\r\n        }\r\n        // a must be equal to b\r\n        return 0;\r\n    });\r\n    console.log(powerstats)\r\n\r\n    return (\r\n        <Card className=\"p-2 my-3\" id=\"powerstatsTotal\">\r\n            <Container>\r\n                <Row>\r\n                    <Col xs={12}>\r\n                        <p id=\"titlePowerstats\">Estadísticas promedio del equipo</p>\r\n                    </Col>\r\n                    <Col className=\"m-2\" lg={6} md={6} sm={6}>\r\n                        <Row>\r\n                            {powerstats.map(item => (\r\n                                <div key={`${item.id}${item.name}`}>\r\n                                    <Col className=\"my-0\" lg={12}>\r\n                                        {item.name}\r\n                                    </Col>\r\n                                    <Col className=\"my-1\" lg={12}>\r\n                                        <ProgressBar variant={item.color} now={item.value} />\r\n                                    </Col>\r\n                                </div>\r\n                            ))}\r\n                        </Row>\r\n                    </Col>\r\n                    <Col className=\"my-2\" lg={5} md={5} sm={5}>\r\n                        <Row>\r\n                            <Col className=\"my-1 large_font\" lg={12}>\r\n                                Altura Promedio: <span className=\"bold\">{parseInt(totalHeight/heroes.length)} cm</span>\r\n                            </Col>\r\n                            <Col className=\"my-1 large_font\" lg={12}>\r\n                                Peso Promedio: <span className=\"bold\">{parseInt(totalWeight/heroes.length)} kg</span>\r\n                            </Col>\r\n                            { heroes.length<6 ?\r\n                                <Col className=\"my-4\" lg={12} id=\"textHelper\"> {/* Operador condicional para manejar el singular y el plural de los superheroes restantes */}\r\n                                    Todavía podés elegir {6-heroes.length} superhéroe{heroes.length !== 5 && <span>s</span>} más.\r\n                                </Col>\r\n                                :\r\n                                <Col className=\"my-1\" lg={12} id=\"textHelper\">\r\n                                    Alcanzaste el máximo de 6 miembros.\r\n                                </Col>\r\n                            }\r\n                            <Col id=\"counterTitle\" lg={12}>\r\n                                Posiciones ocupadas:\r\n                            </Col>\r\n                            <Col className=\"my-1 count_alignment bg-success\" xs={6}>\r\n                                Buenos: {good}/3\r\n                            </Col>\r\n                            <Col className=\"my-1 count_alignment bg-danger\" xs={6}>\r\n                                Malos: {evil}/3\r\n                            </Col>\r\n                        </Row>\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        </Card>\r\n    )\r\n}\r\n","import React, { createContext, useContext, useState, useEffect } from 'react';\r\n\r\nexport const context = createContext([]);\r\nexport const useHeroesContext = () => useContext(context);\r\n\r\nconst heroesFromLS = JSON.parse(localStorage.getItem('heroes'))\r\nconst goodFromLS = JSON.parse(localStorage.getItem('good'))\r\nconst evilFromLS = JSON.parse(localStorage.getItem('evil'))\r\n\r\nconst ContextProvider = ( {children} ) => {\r\n    const initialStates = [\r\n        heroesFromLS !== null ? heroesFromLS : [],\r\n        goodFromLS > (0 || null) ? goodFromLS : 0,\r\n        evilFromLS > (0 || null) ? evilFromLS : 0,\r\n    ]\r\n    const [heroes, setHeroes] = useState(initialStates[0]);\r\n    const [good, setGood] = useState(initialStates[1]);\r\n    const [evil, setEvil] =useState(initialStates[2]);\r\n    const [search, setSearch] = useState([]);\r\n\r\n    useEffect(() => {\r\n        localStorage.setItem('heroes', JSON.stringify(heroes))\r\n        localStorage.setItem('good', JSON.stringify(good))\r\n        localStorage.setItem('evil', JSON.stringify(evil))\r\n    }, [heroes, good, evil])\r\n\r\n    const addHero = (heroId) => {\r\n        if(heroes.length < 6) {\r\n            const actualHero = search.find(u => u.id === heroId)\r\n            console.log(actualHero)\r\n            //Tomo a los neutrales como buenos para evitar errores.\r\n            if(actualHero.biography.alignment !== (\"bad\")){\r\n                if(good===3){\r\n                    alert(\"No puedes agregar más héroes buenos\")\r\n                } else if(good<3){\r\n                    setHeroes([...heroes, actualHero])\r\n                    setGood(good+1);\r\n                }\r\n            } else if(actualHero.biography.alignment === \"bad\"){\r\n                if(evil===3){\r\n                    alert(\"No puedes agregar más héroes malos\")\r\n                } else if(evil<3){\r\n                    setHeroes([...heroes, actualHero])\r\n                    setEvil(evil+1);\r\n                }\r\n            }\r\n        } else {\r\n            alert(\"No se puede realizar la acción. Se ha alcanzado el máximo de 6 integrantes.\")\r\n        }\r\n    }\r\n\r\n    const deleteHero = (heroId) => {\r\n        if(heroes.length > 0) {\r\n            const actualHero = heroes.find(f => f.id === heroId)\r\n            console.log(actualHero.biography.alignment)\r\n            if(actualHero.biography.alignment !== (\"bad\")){\r\n                setGood(good-1);\r\n            } else {\r\n                setEvil(evil-1);\r\n            }\r\n            setHeroes(heroes.filter(item => item !== actualHero));\r\n        }\r\n    }\r\n\r\n    return(\r\n        <context.Provider value={{ heroes, setHeroes, addHero, deleteHero, search, setSearch, good, evil }}>\r\n            { children }\r\n        </context.Provider>\r\n    )\r\n}\r\n\r\nexport default ContextProvider;","import React from 'react';\r\nimport HeroList from './HeroList';\r\nimport PowerstatsTotal from './PowerstatsTotal'\r\nimport { useHeroesContext } from '../../context/HeroesContext';\r\nimport { Container } from 'react-bootstrap';\r\n\r\n//Contenedor de la lista de personajes que conforman el equipo. \r\n//Aquí ejecuto la petición a la API para obtener la información de los superhéroes.\r\nexport default function HeroListContainer() {\r\n    const { heroes, deleteHero, good, evil } = useHeroesContext();\r\n    console.log(`Buenos:${good} y Malos:${evil}`)\r\n\r\n    return (\r\n        <Container id=\"heroListContainer\">\r\n            <h1>SuperTeam</h1><p id=\"subtitle\"> Armá tu equipo de superhéroes y villanos</p>\r\n            {heroes.length>0 ?\r\n                <>\r\n                    <PowerstatsTotal \r\n                    good={good}\r\n                    evil={evil}\r\n                    heroes={heroes}\r\n                    />\r\n                    < HeroList\r\n                    heroes={heroes}\r\n                    deleteHero={deleteHero}\r\n                    />\r\n                </>\r\n                :\r\n                <p id=\"emptyTeam\">\r\n                    El equipo esta vacío 😢 Usa el buscador del menú para agregar miembros 👆👆\r\n                    <br/>\r\n                    El límite es de 6 (3 buenos y 3 malos)\r\n                </p>\r\n            }\r\n        </Container>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Card, Row, Col } from 'react-bootstrap'\r\n\r\n/* Componente donde mostraremos el detalle del superhéroe del equipo.\r\nUtilizamos la información obtenida de la API via props y la plasmamos aquí */\r\nexport default function HeroDetail(props) {\r\n\r\n    return (\r\n        <Card style={{ width: '40rem' }} id=\"detail\">\r\n            <Row>\r\n                <Col lg={7} md={7} sm={7}>\r\n                    <Card.Title className=\"m-0 p-3\"><h3>{props.name}</h3></Card.Title>\r\n                    <Card.Body>\r\n                        <Card.Text id=\"textDetail\">\r\n                            <span className=\"detail_fields\">Alias: <span className=\"bold\">{props.alias}</span></span>\r\n                            <span className=\"detail_fields\">Lugar de trabajo: <span className=\"bold\">{props.workplace}</span></span>\r\n                            <span className=\"detail_fields\">Altura: <span className=\"bold\">{props.height}</span></span>\r\n                            <span className=\"detail_fields\">Peso: <span className=\"bold\">{props.weight}</span></span>\r\n                            <span className=\"detail_fields\">Color de ojos: <span className=\"bold\">{props.eyeColor}</span></span>\r\n                            <span className=\"detail_fields\">Color  de pelo: <span className=\"bold\">{props.hairColor}</span></span>\r\n                        </Card.Text>\r\n                    </Card.Body>\r\n                </Col>\r\n                <Col lg={5} md={5} sm={5}>\r\n                    <Card.Img id=\"imgHeroDetail\" variant=\"top\" src={props.image} />\r\n                </Col>\r\n            </Row>\r\n        </Card>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport HeroDetail from './HeroDetail';\r\nimport { useHeroesContext } from '../../context/HeroesContext'\r\nimport { useParams } from 'react-router-dom'\r\nimport { Container, Button } from 'react-bootstrap'\r\n\r\n// Contenedor del detalle de superhéroe.\r\n/* Aquí ejecutamos la petición a la API obteniendo la información que se utilizará\r\nen el componente anidado HeroDetail */\r\nexport default function HeroDetailContainer() {\r\n    const { heroes } = useHeroesContext();\r\n    const idHero = useParams()\r\n    const hero = heroes.find(h => h.id === idHero.idHero)\r\n    console.log(idHero.idHero)\r\n    console.log(hero)\r\n    return (\r\n        <>\r\n        <Container className=\"my-3\" id=\"detailContainer\">\r\n            < HeroDetail\r\n                name={hero.name}\r\n                image={hero.image.url}\r\n                alias={hero.biography.aliases[0]}\r\n                height={hero.appearance.height[1]}\r\n                weight={hero.appearance.weight[1]}\r\n                eyeColor={hero.appearance[\"eye-color\"]}\r\n                hairColor={hero.appearance[\"hair-color\"]}\r\n                workplace={hero.work.base}\r\n            />\r\n        </Container>\r\n        <div id=\"buttonHome\">\r\n            <Button\r\n                variant=\"primary\"\r\n                bg=\"primary\"\r\n            >\r\n                Volver al home\r\n            </Button>\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Card, Button } from 'react-bootstrap'\r\nimport { useHistory } from 'react-router-dom'\r\n\r\nexport default function SearchItem(props) {\r\n    let history = useHistory();\r\n    async function handleClick(){\r\n        await props.addHero(props.id);\r\n        history.push('/');\r\n    }\r\n    return (\r\n        <Card className={`card_search ${props.alignment}`} style={{ width: '19rem' }}>\r\n            <Card.Img className=\"img_hero\" variant=\"top\" src={props.image} />\r\n            <Card.Body className=\"searchItem\">\r\n                <Card.Title className=\"m-0\"><h3>{props.name}</h3></Card.Title>\r\n                <div className=\"containerHero p-0 m-0\">\r\n                    <Button onClick={handleClick} variant=\"success\">\r\n                        <span className=\"material-icons xs-25\">add</span>\r\n                    </Button>\r\n                </div>\r\n            </Card.Body>\r\n        </Card>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport SearchItem from './SearchItem';\r\nimport { Row, Col } from 'react-bootstrap';\r\n\r\n/* En este componente mapearemos los héroes que hayan coincidido con la búsqueda.\r\nSe recibe la información del componente padre via props. */\r\nexport default function SearchList({ search, addHero }) {\r\n    return (\r\n        <Row>\r\n            {search.map((item) => (\r\n                    <Col \r\n                        key={item.id+1} \r\n                        lg={4}\r\n                        md={6}\r\n                        sm={12}\r\n                        xs={12}\r\n                        className=\"containerCard my-3\"\r\n                    >\r\n                        < SearchItem\r\n                            id={item.id}\r\n                            addHero={addHero}\r\n                            name={item.name}\r\n                            image={item.image.url}\r\n                            alignment={item.biography.alignment}\r\n                        />\r\n                    </Col>\r\n                ))\r\n            }\r\n        </Row>\r\n    )\r\n}\r\n","import React, { useEffect } from 'react';\r\nimport SearchList from './SearchList';\r\nimport {useHeroesContext} from '../../context/HeroesContext';\r\nimport { useParams, useHistory } from 'react-router-dom'\r\nimport Axios from 'axios';\r\nimport https from 'https';\r\n\r\n/* Contenedor de la lista de superhéroes buscados.\r\nAquí ejecutamos la petición a la API para obtener una breve descripción de \r\nlos superhéroes que coincidan con la búsqueda. */\r\nexport default function SearchListContainer() {\r\n    const { addHero, search, setSearch } = useHeroesContext();\r\n    const {name} = useParams();\r\n    let history = useHistory();\r\n\r\n    useEffect(()=> {\r\n        const httpsAgent = new https.Agent({ keepAlive: true });\r\n        Axios.get(`https://www.superheroapi.com/api.php/10219509750322612/search/${name}`, { httpsAgent })\r\n            .then((response) => {\r\n                if(response.data.response===\"success\"){\r\n                    setSearch(response.data.results)\r\n                } else {\r\n                    setSearch(response.data.response)\r\n                }\r\n                console.log(response.data)\r\n            })\r\n            .catch((error) => {\r\n                console.log(error);\r\n                history.push('/');\r\n            });\r\n    }, [name, history, setSearch])\r\n\r\n    return (\r\n        <div id=\"heroListContainer\">\r\n            <h5 id=\"titleSearchContainer\">Sumá nuevos miembros</h5>\r\n            {\r\n                search !== \"error\" ?\r\n                < SearchList\r\n                search={search}\r\n                addHero={addHero}\r\n                />\r\n                :\r\n                <p id=\"notFound\">No se encontraron resultados 🤷‍♂️</p>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function Footer() {\r\n    return ( \r\n        <p id=\"footer\" className=\"p-2\">\r\n            <a \r\n                href=\"https://www.linkedin.com/in/manuelgonzalezmourino/\"\r\n                target=\"_blank\"\r\n                rel=\"noopener noreferrer\"\r\n            >\r\n                Developed by Manuel Gonzalez Mouriño\r\n            </a>\r\n        </p>\r\n    )\r\n}\r\n","import React, { useState, useEffect } from 'react'\nimport Login from './components/Login';\nimport NavBar from './components/NavBar';\nimport HeroListContainer from './components/home_list/HeroListContainer';\nimport HeroDetailContainer from './components/detail/HeroDetailContainer';\nimport SearchListContainer from './components/search/SearchListContainer';\nimport Footer from './components/Footer';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\nimport ContextProvider from './context/HeroesContext';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\n\nfunction App() {\n  const [logged, setLogged] = useState(false);\n  console.log(logged)\n  const token = localStorage.getItem('hero_token')\n\n  useEffect(() => {\n    if(token !== null){\n      setLogged(true)\n    }\n  }, [token])\n  \n  return (\n    <ContextProvider>\n      <BrowserRouter>\n      { !logged ?\n        <Login \n          setLogged={setLogged}\n        />\n        :\n        <>\n          <NavBar />\n          <Switch>\n            <Route exact path='/' component={ HeroListContainer }/>\n            <Route exact path='/detail/:idHero' component={ HeroDetailContainer }/>\n            <Route exact path='/search/:name' component={ SearchListContainer }/>\n          </Switch>\n          <Footer />\n        </>\n      }\n      </BrowserRouter>\n    </ContextProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n//import reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n//reportWebVitals();\n"],"sourceRoot":""}